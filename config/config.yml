working_directory: /usr/src/app
# the netrc_filename value must be a fully-qualified name
# netrc_filename: /usr/src/app/netrc
# this is the name of the proxy certificate file supplied 
# to the container. It must be a fully-qualified name. 
# One of netrc_filename or proxy_filename must have a value.
proxy_file_name: /usr/src/app/cadcproxy.pem
# operational value is ivo://cadc.nrc.ca/ams
# - modifies entries on sc2.canfar.net
resource_id: ivo://cadc.nrc.ca/sc2repo
# operational value is ivo://cadc.nrc.ca/ams/blank
# - queries entries on sc2.canfar.net
tap_id: ivo://cadc.nrc.ca/sc2tap
storage_inventory_resource_id: ivo://cadc.nrc.ca/cadc/minoc
storage_inventory_tap_resource_id: ivo://cadc.nrc.ca/global/luskan
# file that contains the list of entries to process
todo_file_name: todo.txt
data_sources:
  - vos:test
data_source_extensions:
  - .fits
# values True False
# when True, the application will look for files with
# .fits, .gz, .json endings as defining the work to be 
# done.
use_local_files: True
# values DEBUG INFO WARNING ERROR
logging_level: DEBUG
# values True False
log_to_file: True
# fully qualified name for a directory to write log files
log_file_directory: /usr/src/app/logs
# the filename where success logs are written
#
# this file is created in the logs directory, default is 'success_log.txt'
success_log_file_name: success_log.txt
# the filename where failure logs are written
#
# this file is created in the logs directory, default is 'failure_log.txt'
failure_log_file_name: failure_log.txt
# the filename where retry ids are written. This file is only written
# if use_local_files is False.
#
# this file is created in the logs directory, default is 'retries.txt'
retry_file_name: retries.txt
# the filename where pipeline progress is written. This file is
# always written. It's an on-going log of the number of entries processed
# by the pipeline, and is useful when using time-boxed execution.
#
# this file is created in the logs directory, default is 'progress.txt'
progress_file_name: progress.txt
#
collection: BLANK
scheme: cadc
preview_scheme: cadc
#
# CADC service execution metrics
#
observe_execution: True
observable_directory: /usr/src/app/metrics
# 
# if the pipeline for the collection tracks known failures, that occurs
# in this location
# 
rejected_file_name: rejected.yml
rejected_directory: /usr/src/app/rejected
#
# for information that needs to be persisted between pipeline 
# invocations, defaults to 'state.yml', and is found in 'working_directory'
#
state_file_name: state.yml
#
# if using a state file to time-box execution chunks, this is 
# the interval, in minutes, that define the start and end of the 
# time-box.
#
interval: 600
# how to control the work that gets done
# possible values are:
# - scrape - read the headers, write out the xml - kind of a test mode
# - store - calls cadc-data to put a file from local storage (use_local_files must be set to True)
# - ingest - read the headers, write the xml to the endpoint found by resource_id
# - modify - create a footprint and previews for an existing CAOM model record
task_types: 
  - ingest
